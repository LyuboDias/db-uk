html,body
{
  width: 100%;
  margin: 0px;
  padding: 0px;
  overflow-x: hidden;
  scroll-behavior: smooth;
}
body {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Roboto', sans-serif;;
  background-color: #121212;
  color: white;
}
// ------- red font-family - Audiowide

.spec-text {
  font-family: 'Audiowide', cursive;
  color: $red;
}
// -----text colored-------
// .test {
//   background-image: linear-gradient(to left, violet, indigo, green, blue, yellow, orange, red);
//   -webkit-background-clip: text;
//   -moz-background-clip: text;
//   background-clip: text;
//   color: transparent;
// }
// -----main links -------
.footer {
  position: relative;
}
.db-web-logo {
  width: 60px;
}
.db-music1 {
  position: absolute;
  top: -70px;
  left: 1px;
}
.by-hover1:hover p {
  transition: .5s;
  display: block;
}
.by-music1 {
  display: none;
  top: 1px;
  left: 60px;
  position: absolute;
  font-size: 14px;
  margin: 0 auto;
  color: $blue;
}
.db-music3 {
  position: absolute;
  bottom: 1px;
  right: 1px;
}
.by-music3 {
  display: none;
  bottom: 0;
  right: 60px;
  position: absolute;
  font-size: 14px!important;
  margin: 0 auto;
  color: $blue;
}
.main-links {
  text-align: center;
  ul {
    list-style-type: none;
    li, span{

      display: inline-block;
      text-align: center;
      padding: 14px 26px;
      text-decoration: none;
      font-size: 20px;
      a {
        transition: .5s;
        text-decoration: none;
        &:hover {
        text-shadow: 0px 0px 30px rgb(61,230,254);
        }
      }
    }
  }
}
.empty {
  height: 200px;
  color: $blue;
  font-size: 34px;
  display: flex;
  justify-content: space-around;
  align-items: center;
}
// -----media links---------
.media-links {
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  .media-links-ul {
    display: flex;
    .media-links-li {
      cursor: pointer;
      position: relative;
      display: block;
      font-size: 24px;
      background: rgb(31,29,29);
      border-radius: 50%;
      margin: 0 15px;
      line-height: 50px;
      width: 50px;
      height: 50px;
      &:hover:before {
        transform: scale(1.2);
        box-shadow: 0 0 15px $red;
        filter: blur(3px);
      }

      a {
        color: $red;
        transition: 0.5s;
      }
      &:before {
        position: absolute;
        content: '';
        top: 0;
        left: 0;
        background: $red;
        height: 100%;
        width: 100%;
        border-radius: 50%;
        z-index: -1;
        transform: scale(0.9);
        transition: 0.5s;
      }
    }
  }
}
// -------------------------
.wrap {
  background-attachment: fixed;
  background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("https://res.cloudinary.com/dxoo6hrvw/image/upload/v1602611882/coding-keyboard_yclssh.jpg");
  height: 100vh;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  position: relative;
  text-align: center;
  width: 100%;
  padding-top: 100px;
  // display: flex;
  // justify-content: center;
  // align-items: center;
  h1 {
    font-size: 12em;
    font-family: 'Audiowide', cursive;
    color: $red;
  }
  .web {
    font-size: 4rem;
    font-family: Monoton;
    color: $red;
    // font-family: 'Audiowide', cursive;
  }
}


.blue {
  color: $blue;
}



.wrap-info {
  background-attachment: fixed;
   background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("coding-laptop.jpeg");
  height: 100vh;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  position: relative;
  text-align: center;
  width: 100%;
  padding-top: 100px;
}

// --------------scrolling text-----------------
.rails-logo {
  width: 35px;
  height: 40px;
}
.text-wrap {
  display: flex;
  width: 100%;
}
.marquee {
  width: 100%;
  line-height: 40px;
  background-color: #121212;
  white-space: nowrap;
  overflow: hidden;
  box-sizing: border-box;
  position: absolute;
  right: 0;
}
.marquee p {
  color: $red;
  margin: auto 0;
  font-size: 40px;
  display: inline-block;
  padding-left: 100%;
  animation: marquee 10s linear infinite;
  i {
    margin: auto 20px;
  }
}
@keyframes marquee {
  0%   { transform: translate(0, 0); }
  100% { transform: translate(-100%, 0); }
}
// --------------------------
// ------back to top---------------------------
.back-to-top {
font-size: 2em;
z-index: 22;
position: fixed;
bottom: 10px;
right: 20px;
}
// ------hello there text animation----
.animation {
  position: relative;
  height: 50vh;
}
.bottom-container,
.top-container {
  width: 100vw;
  height: 50vh;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  padding: 1vw;
  font-size: 24px;
}

.bottom-container {
  color: $red;
}

.top-container {
  background-color: $red;
  color: $blue;
  clip-path: circle(10% at 85% 50%);
  animation: circleMove 10s ease-in-out infinite;
}

@keyframes circleMove {
  0%, 100% {
    clip-path: circle(10% at 85% 50%);
  }
  50% {
    clip-path: circle(10% at 15% 50%);
  }
}

// ----- glitch resume-----
.glitch-resume {
  font-size: 30px;
  text-decoration: none;
  position: absolute;
  left: 50%;
  transform: translate(-50%, -50%);
  margin: 0;
  color: $blue;
  letter-spacing: 5px;

  &:before, &:after {
    display: block;
    content: attr(data-glitch);
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    opacity: .8;
  } &:after {
    color: $red;
    z-index: -2;
  } &:before {
    color: $blue;
    z-index: -1;
  }
  &:hover {
    &:before {
      animation: glitch .3s cubic-bezier(.25, .46, .45, .94) both 5
    }
    &:after {
      animation: glitch .3s cubic-bezier(.25, .46, .45, .94) reverse both 5
    }
  }
}



@keyframes glitch {
  0% {
    transform: translate(0)
  }
  20% {
    transform: translate(-5px, 5px)
  }
  40% {
    transform: translate(-5px, -5px)
  }
  60% {
    transform: translate(5px, 5px)
  }
  80% {
    transform: translate(5px, -5px)
  }
  to {
    transform: translate(0)
  }
}
// ---------------glits db -----------------
#app {
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

#wrapper {
   text-align: center;
}

@mixin glitchCopy {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.glitch {
  position: relative;
  color: white;
  font-size: 4em;
  animation: glitch-skew 1s infinite linear alternate-reverse;

  // Creates a copy before our text.
  &::before{
    // Duplicates our text with the mixin.
    @include glitchCopy;
    // Scoots text slightly to the left for the color offset.
    left: 2px;
    // Creates the color 'shadow' that happens on the glitch.
    text-shadow: -2px 0 $blue;
    /* Creates an initial clip for our glitch. This works in
    a typical top,right,bottom,left fashion and creates a mask
    to only show a certain part of the glitch at a time. */
    clip: rect(44px, 450px, 56px, 0);
    /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
    with an alternating animation to keep things fresh. */
    animation: glitch-anim 5s infinite linear alternate-reverse;
  }

  // Creates a copy after our text. Note comments from ::before.
  &::after {
    @include glitchCopy;
    left: -2px;
    text-shadow: -2px 0 $blue, 2px 2px $red;
    animation: glitch-anim2 1s infinite linear alternate-reverse;
  }
}

/* Creates an animation with 20 steaps. For each step, it calculates
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
      transform: skew((random(100) / 100) + deg);
    }
  }
}

// Same deal, just duplicated for ultra randomness.
@keyframes glitch-anim2 {
  $steps: 20;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
      transform: skew((random(100) / 100) + deg);
    }
  }
}

// Does the same deal as before, but now only skews. Used for main text.
@keyframes glitch-skew {
  $steps: 10;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      transform: skew((random(10) - 5) + deg);
    }
  }
}
// ---------- info div----------------------
.container {
  p {
    letter-spacing: 1px;
    font-size: 20px;
  }
  li {
    font-size: 20px;
  }
}
.wrap-info ul {
  list-style-type: none;
}
// --------projects---------
.card-body ul {
  margin-left: 20px;
}
.card-img {
  width: 100%;
}
.card {
  background-color: #121212;
}
.card-wrap {
  display: flex;
  justify-content: space-between;
  a {
    letter-spacing: 2px;
    margin-left: 5px;
  }
}
.project-info {
  width: 40%;
}
// ----------BLOG-------------------
.blog {
  background-attachment: fixed;
  background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("coding2.jpeg");
  height: 100vh;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  display: flex;
  justify-content: center;
  align-items: center;
}
.inner-blog {
  width: 90%;
}
// -----------------BIO--------------------
.bio {
  background-attachment: fixed;
  background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("coding-background.jpeg");
  height: 100vh;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  display: flex;
  justify-content: center;
  align-items: center;
}
.inner-bio {
  width: 90%;
}
